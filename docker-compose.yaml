services:
  app:
    # image: 'josetejada110/laravel_react_starter_kit:${TAG:-latest}'
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_ENV: development
        OPCACHE_DEFAULT: 0
    container_name: web_app
    restart: always
    depends_on:
      app_db:
        condition: service_healthy
      # typesense:
      #   condition: service_started
    environment:
      - 'AUTORUN_ENABLED=false'
      - 'APP_NAME=${APP_NAME:-Laravel}'
      - 'APP_ENV=${APP_ENV:-local}'
      - 'APP_KEY=${APP_KEY}'
      - 'APP_DEBUG=${APP_DEBUG:-true}'
      - 'APP_URL=${APP_URL}'
      - 'ASSET_URL=${ASSET_URL}'
      - 'APP_CENTRAL_DOMAIN=${APP_CENTRAL_DOMAIN}'
      - 'APP_LOCALE=${APP_LOCALE:-es}'
      - 'APP_FALLBACK_LOCALE=${APP_FALLBACK_LOCALE:-en}'
      - 'APP_FAKER_LOCALE=${APP_FAKER_LOCALE:-es}'
      - 'APP_MAINTENANCE_DRIVER=${APP_MAINTENANCE_DRIVER:-file}'
      - 'PHP_CLI_SERVER_WORKERS=${PHP_CLI_SERVER_WORKERS:-4}'
      - 'BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-12}'
      - 'LOG_CHANNEL=${LOG_CHANNEL:-stack}'
      - 'LOG_STACK=${LOG_STACK:-single}'
      - 'LOG_DEPRECATIONS_CHANNEL=${LOG_DEPRECATIONS_CHANNEL:-null}'
      - 'LOG_LEVEL=${LOG_LEVEL:-debug}'
      - 'DB_CONNECTION=${DB_CONNECTION}'
      - 'DB_HOST=${DB_HOST:-app_db}'
      - 'DB_PORT=${DB_PORT:-5432}'
      - 'DB_DATABASE=${DB_DATABASE:-app_db}'
      - 'DB_USERNAME=${DB_USERNAME:-test}'
      - 'DB_PASSWORD=${DB_PASSWORD:-test}'
      - 'SESSION_DRIVER=${SESSION_DRIVER:-database}'
      - 'SESSION_LIFETIME=${SESSION_LIFETIME:-120}'
      - 'SESSION_ENCRYPT=${SESSION_ENCRYPT:-false}'
      - 'SESSION_PATH=${SESSION_PATH:-/}'
      - 'SESSION_DOMAIN=${SESSION_DOMAIN:-null}'
      - 'BROADCAST_CONNECTION=${BROADCAST_CONNECTION:-log}'
      - 'FILESYSTEM_DISK=${FILESYSTEM_DISK:-local}'
      - 'QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}'
      - 'REDIS_QUEUE_CONNECTION=${REDIS_QUEUE_CONNECTION:-queues}'
      - 'CACHE_STORE=${CACHE_STORE:-redis}'
      - 'CACHE_PREFIX=${CACHE_PREFIX}'
      - 'REDIS_CACHE_CONNECTION=${REDIS_CACHE_CONNECTION:-cache}'
      - 'MEMCACHED_HOST=${MEMCACHED_HOST:-127.0.0.1}'
      - 'REDIS_CLIENT=${REDIS_CLIENT:-phpredis}'
      - 'REDIS_HOST=${REDIS_HOST:-redis_server}'
      - 'REDIS_PASSWORD=${REDIS_PASSWORD:-null}'
      - 'REDIS_PORT=${REDIS_PORT:-6379}'
      - 'MAIL_MAILER=${MAIL_MAILER:-log}'
      - 'MAIL_SCHEME=${MAIL_SCHEME:-null}'
      - 'MAIL_HOST=${MAIL_HOST:-127.0.0.1}'
      - 'MAIL_PORT=${MAIL_PORT:-2525}'
      - 'MAIL_USERNAME=${MAIL_USERNAME:-null}'
      - 'MAIL_PASSWORD=${MAIL_PASSWORD:-null}'
      - 'MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS:-"hello@example.com"}'
      - 'MAIL_FROM_NAME=${MAIL_FROM_NAME:-"${APP_NAME}"}'
      - 'AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}'
      - 'AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
      - 'AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}'
      - 'AWS_BUCKET=${AWS_BUCKET}'
      - 'AWS_USE_PATH_STYLE_ENDPOINT=${AWS_USE_PATH_STYLE_ENDPOINT:-false}'
      - 'VITE_APP_NAME=${VITE_APP_NAME}'
    networks:
      - app-network

  app_db:
    image: postgres:17.4
    container_name: app_db
    restart: always
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis_server:
    image: redis:latest
    container_name: redis_server
    restart: on-failure
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    networks:
      - app-network

  # typesense:
  #   image: typesense/typesense:28.0
  #   container_name: typesense
  #   restart: on-failure
  #   environment:
  #     TYPESENSE_DATA_DIR: '${TYPESENSE_DATA_DIR:-/data}'
  #     TYPESENSE_API_KEY: '${TYPESENSE_API_KEY}'
  #     TYPESENSE_LISTEN_PORT: '${TYPESENSE_PORT:-8108}'
  #     TYPESENSE_LOG_LEVEL: '${TYPESENSE_LOG_LEVEL:-info}'
  #   volumes:
  #     - typesense_data:/data
  #   # command: '--data-dir /data --api-key=xyz --enable-cors'
  #   command: [ '--enable-cors' ]
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  redis_data:
  # typesense_data:
